// This file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.

@use 'sass:map';
@use '@angular/material' as mat;
@use 'cw';

$_colors: (
  primary: (light: #196ae3, dark: red),
  secondary: (light: #414a54, dark: green),
  tertiary: (light: #e9edf1, dark: blue),
  neutral: (light: #5c5e67, dark: #5c5e67),
  neutral-variant: (light: #5a5e6c, dark: #5a5e6c),
  error: (light: #ba1a1a, dark: #ba1a1a)
);

$_palettes: cw.palette-variants(
  $_colors,
  //(
  //  neutral: map.merge(cw.$tones, (4, 6, 12, 17, 22, 24, 87, 92, 94, 96))
  //)
);

@mixin declare-palettes {
  //@each $name, $palette in $_palettes {
  //  cw.declare-palette('#{$name}-light', map.get($palette, light));
  //  cw.declare-palette('#{$name}-dark', map.get($palette, light));
  //}
}

$_rest: (
  light: (
    secondary: map.get($_palettes, secondary, light),
    neutral: map.get($_palettes, neutral, light),
    neutral-variant: map.get($_palettes,  neutral-variant, light),
    error: map.get($_palettes, error, light)
  ),
  dark: (
    secondary: map.get($_palettes, secondary, dark),
    neutral: map.get($_palettes, neutral, dark),
    neutral-variant: map.get($_palettes,  neutral-variant, dark),
    error: map.get($_palettes, error, dark),
  )
);

$primary-palette: (
  light: map.merge(map.get($_palettes, primary, light), map.get($_rest, light)),
  dark: map.merge(map.get($_palettes, primary, dark), map.get($_rest, dark))
);
$tertiary-palette: (
  light: map.merge(map.get($_palettes, tertiary, light), map.get($_rest, light)),
  dark: map.merge(map.get($_palettes, tertiary, dark), map.get($_rest, dark))
);

@function _high-contrast-value($light, $dark, $theme-type) {
  @if ($theme-type == light) {
    @return $light;
  }
  @if ($theme-type == dark) {
    @return $dark;
  }
  @if ($theme-type == color-scheme) {
    @return light-dark(#{$light}, #{$dark});
  }

  @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
  @include mat.theme-overrides((
    primary: _high-contrast-value(#002964, #ecefff, $theme-type),
    on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
    primary-container: _high-contrast-value(#00459e, #a9c2ff, $theme-type),
    on-primary-container: _high-contrast-value(#ffffff, #000a24, $theme-type),
    inverse-primary: _high-contrast-value(#afc6ff, #00439b, $theme-type),
    primary-fixed: _high-contrast-value(#00459e, #d9e2ff, $theme-type),
    primary-fixed-dim: _high-contrast-value(#002f71, #afc6ff, $theme-type),
    on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-primary-fixed-variant: _high-contrast-value(#ffffff, #00102f, $theme-type),
    secondary: _high-contrast-value(#242d36, #e8f1fd, $theme-type),
    on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
    secondary-container: _high-contrast-value(#414a54, #bac3cf, $theme-type),
    on-secondary-container: _high-contrast-value(#ffffff, #040c14, $theme-type),
    secondary-fixed: _high-contrast-value(#414a54, #dae3f0, $theme-type),
    secondary-fixed-dim: _high-contrast-value(#2b343d, #bec7d3, $theme-type),
    on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-secondary-fixed-variant: _high-contrast-value(#ffffff, #09121a, $theme-type),
    tertiary: _high-contrast-value(#282d30, #ecf0f4, $theme-type),
    on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
    tertiary-container: _high-contrast-value(#454a4d, #bfc3c7, $theme-type),
    on-tertiary-container: _high-contrast-value(#ffffff, #070c0f, $theme-type),
    tertiary-fixed: _high-contrast-value(#454a4d, #dfe3e7, $theme-type),
    tertiary-fixed-dim: _high-contrast-value(#2e3336, #c3c7cb, $theme-type),
    on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #0d1215, $theme-type),
    background: _high-contrast-value(#faf8ff, #11131a, $theme-type),
    on-background: _high-contrast-value(#191b23, #e1e2ec, $theme-type),
    surface: _high-contrast-value(#faf8ff, #11131a, $theme-type),
    surface-dim: _high-contrast-value(#b7b8c2, #11131a, $theme-type),
    surface-bright: _high-contrast-value(#faf8ff, #4d5058, $theme-type),
    surface-container-lowest: _high-contrast-value(#ffffff, #000000, $theme-type),
    surface-container: _high-contrast-value(#e1e2ec, #2e3038, $theme-type),
    surface-container-high: _high-contrast-value(#d3d4de, #393b43, $theme-type),
    surface-container-highest: _high-contrast-value(#c5c6d0, #44464f, $theme-type),
    on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
    shadow: _high-contrast-value(#000000, #000000, $theme-type),
    scrim: _high-contrast-value(#000000, #000000, $theme-type),
    surface-tint: _high-contrast-value(#0059c8, #afc6ff, $theme-type),
    inverse-surface: _high-contrast-value(#2e3038, #e1e2ec, $theme-type),
    inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
    outline: _high-contrast-value(#272c38, #ecefff, $theme-type),
    outline-variant: _high-contrast-value(#444956, #bec2d2, $theme-type),
    error: _high-contrast-value(#600004, #ffece9, $theme-type),
    on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
    error-container: _high-contrast-value(#98000a, #ffaea4, $theme-type),
    on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
    surface-variant: _high-contrast-value(#dee2f3, #424754, $theme-type),
    on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
  ))
}
